// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© fktrdr

//@version=5
indicator("Supertrend Channel", "Supertrend Channel", false, timeframe="", timeframe_gaps=true)

atr_period = input.int(52, "ATR Length", 1)
atr_method = input.string("RMA", "ATR Method", ["EMA", "RMA", "SMA", "WMA"])
atr_factor = input.float(2.5, "ATR Factor", step = 0.1)
atr_source = input.source(close, "ATR Source")
atr_change = input.bool(true, "ATR Change Track", "Adjust the Stop with the ATR change")
ma_period = input.int(5, "MA Length", 1)
ma_method = input.string("RMA", "MA Method", ["EMA", "RMA", "SMA", "WMA"])
ma_source = input.source(close, "MA Source")

f_ma(source, length, method) =>
	switch method
		"EMA" => ta.ema(source, length)
		"RMA" => ta.rma(source, length)
		"SMA" => ta.sma(source, length)
		=> ta.wma(source, length)

tr = math.max(high - low, math.abs(high - atr_source[1]), math.abs(low - atr_source[1]))
atr = f_ma(tr, atr_period, atr_method)

upper_band = close[1] + atr[1] * atr_factor
lower_band = close[1] - atr[1] * atr_factor

upper_band1 = nz(upper_band[1])
lower_band1 = nz(lower_band[1])

upper_band := upper_band < upper_band1 or close[1] > upper_band1 ? upper_band : atr_change ? upper_band1 + (atr[1] - atr[2]) * atr_factor : upper_band1
lower_band := lower_band > lower_band1 or close[1] < lower_band1 ? lower_band : atr_change ? lower_band1 + (atr[2] - atr[1]) * atr_factor : lower_band1

var DIRECTION_UP = 1
var DIRECTION_DN = -1

int stop_direction = na
int trend_direction = na

float st_stop = na

if na(atr[1])
	stop_direction := DIRECTION_UP
else if st_stop[1] == upper_band1
	stop_direction := close[1] > upper_band1 ? DIRECTION_DN : DIRECTION_UP
else
	stop_direction := close[1] < lower_band1 ? DIRECTION_UP : DIRECTION_DN

st_stop := stop_direction == DIRECTION_DN ? lower_band : upper_band

if na(atr[1])
	trend_direction := DIRECTION_UP
else if st_stop == upper_band
	trend_direction := close > upper_band ? DIRECTION_DN : DIRECTION_UP
else
	trend_direction := close < lower_band ? DIRECTION_UP : DIRECTION_DN

st_trend = close
st_trend := ta.crossover(trend_direction, 0) or ta.crossunder(trend_direction, 0) ? close : trend_direction == DIRECTION_DN ? math.max(st_trend[1], close) : math.min(st_trend[1], close)

plot(st_trend, "Trend", color.aqua, 3, plot.style_line)
plot(st_stop, "Stop", #ff8c00, 3, plot.style_line)

ma = f_ma(ma_source, ma_period, ma_method)
plot(ma, "Average", #8d8d8d, 1, plot.style_line)
plot(atr_source, "Strength", color.yellow, 1, plot.style_circles)
